{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useFlip = () => {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n\n  return [isFacingUp, flipCard];\n};\n\nconst useAxios = baseUrl => {\n  const [data, setData] = useState([]);\n\n  const addData = async (moreUrl = \"\") => {\n    const response = await axios.get(`${baseUrl}${moreUrl}/`);\n    setData(data => [...data, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  return [data, addData];\n};\n\nexport { useFlip, useAxios };","map":{"version":3,"sources":["E:/code/react-cards-pokemon/src/hooks.js"],"names":["React","useState","useEffect","v4","uuid","axios","useFlip","isFacingUp","setIsFacingUp","flipCard","isUp","useAxios","baseUrl","data","setData","addData","moreUrl","response","get","id"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACnBD,IAAAA,aAAa,CAACE,IAAI,IAAI,CAACA,IAAV,CAAb;AACH,GAFD;;AAGA,SAAO,CAACH,UAAD,EAAaE,QAAb,CAAP;AACH,CAND;;AAQA,MAAME,QAAQ,GAAIC,OAAD,IAAa;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMc,OAAO,GAAG,OAAOC,OAAO,GAAG,EAAjB,KAAwB;AACpC,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEN,OAAQ,GAAEI,OAAQ,GAA/B,CAAvB;AACAF,IAAAA,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU,EAAE,GAAGI,QAAQ,CAACJ,IAAd;AAAoBM,MAAAA,EAAE,EAAEf,IAAI;AAA5B,KAAV,CAAT,CAAP;AACH,GAHD;;AAIA,SAAO,CAACS,IAAD,EAAOE,OAAP,CAAP;AACH,CAPD;;AASA,SAAQT,OAAR,EAAiBK,QAAjB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nconst useFlip = () => {\r\n    const [isFacingUp, setIsFacingUp] = useState(true);\r\n    const flipCard = () => {\r\n        setIsFacingUp(isUp => !isUp);\r\n    };\r\n    return [isFacingUp, flipCard];\r\n}\r\n\r\nconst useAxios = (baseUrl) => {\r\n    const [data, setData] = useState([]);\r\n    const addData = async (moreUrl = \"\") => {\r\n        const response = await axios.get(`${baseUrl}${moreUrl}/`);\r\n        setData(data => [...data, { ...response.data, id: uuid() }]);\r\n    };\r\n    return [data, addData];\r\n}\r\n\r\nexport {useFlip, useAxios};"]},"metadata":{},"sourceType":"module"}