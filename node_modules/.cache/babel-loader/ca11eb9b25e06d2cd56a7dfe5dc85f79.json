{"ast":null,"code":"import { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useFlip = () => {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n\n  return [isFacingUp, flipCard];\n};\n\nconst useAxios = baseUrl => {\n  const [data, setData] = useState([]);\n\n  const addData = async (e, restOfUrl = \"\") => {\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setData(data => [...data, { ...response.data,\n      id: uuid()\n    }]);\n  };\n\n  return [data, addData];\n};\n\nexport { useFlip, useAxios };","map":{"version":3,"sources":["E:/code/react-cards-pokemon/src/hooks.js"],"names":["useState","v4","uuid","axios","useFlip","isFacingUp","setIsFacingUp","flipCard","isUp","useAxios","baseUrl","data","setData","addData","e","restOfUrl","response","get","id"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMO,QAAQ,GAAG,MAAM;AACnBD,IAAAA,aAAa,CAACE,IAAI,IAAI,CAACA,IAAV,CAAb;AACH,GAFD;;AAGA,SAAO,CAACH,UAAD,EAAaE,QAAb,CAAP;AACH,CAND;;AAQA,MAAME,QAAQ,GAAIC,OAAD,IAAa;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMa,OAAO,GAAG,OAAOC,CAAP,EAAUC,SAAS,GAAG,EAAtB,KAA6B;AAEzC,UAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEP,OAAQ,GAAEK,SAAU,EAAjC,CAAvB;AACAH,IAAAA,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU,EAAE,GAAGK,QAAQ,CAACL,IAAd;AAAoBO,MAAAA,EAAE,EAAEhB,IAAI;AAA5B,KAAV,CAAT,CAAP;AACH,GAJD;;AAKA,SAAO,CAACS,IAAD,EAAOE,OAAP,CAAP;AACH,CARD;;AAUA,SAAQT,OAAR,EAAiBK,QAAjB","sourcesContent":["import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nconst useFlip = () => {\r\n    const [isFacingUp, setIsFacingUp] = useState(true);\r\n    const flipCard = () => {\r\n        setIsFacingUp(isUp => !isUp);\r\n    };\r\n    return [isFacingUp, flipCard];\r\n}\r\n\r\nconst useAxios = (baseUrl) => {\r\n    const [data, setData] = useState([]);\r\n    const addData = async (e, restOfUrl = \"\") => {\r\n        \r\n        const response = await axios.get(`${baseUrl}${restOfUrl}`);\r\n        setData(data => [...data, { ...response.data, id: uuid() }]);\r\n    };\r\n    return [data, addData];\r\n}\r\n\r\nexport {useFlip, useAxios};"]},"metadata":{},"sourceType":"module"}